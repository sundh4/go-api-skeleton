{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "For serve swagger ui",
        "title": "Swagger for Go REST API",
        "contact": {
            "name": "Surya",
            "url": "https://www.omitsindo.com",
            "email": "surya@omitsindo.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "go.omitsindo.com",
    "basePath": "/api/v1",
    "paths": {
        "/user/confirm": {
            "get": {
                "description": "Update profile for current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "To activate user based on Email confirmation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret token that sent to email",
                        "name": "s",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Confirmed",
                        "schema": {
                            "$ref": "#/definitions/model.EmptyResp"
                        }
                    },
                    "400": {
                        "description": "Empty Token Confirmation",
                        "schema": {
                            "$ref": "#/definitions/model.BadResp"
                        }
                    },
                    "403": {
                        "description": "Invalid Token Confirmation",
                        "schema": {
                            "$ref": "#/definitions/model.ForbResp"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Login will return token, admin status and user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth API"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Login by Username",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProfileTokResp"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/model.BadResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorize",
                        "schema": {
                            "$ref": "#/definitions/model.UnAuthResp"
                        }
                    },
                    "403": {
                        "description": "Invalid credential",
                        "schema": {
                            "$ref": "#/definitions/model.ForbResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InErrResp"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Logout user and remove auth token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth API"
                ],
                "summary": "Logout User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.EmptyResp"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorize",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.UnAuthResp"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InErrResp"
                        }
                    }
                }
            }
        },
        "/user/password": {
            "post": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Change password for current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "Current and old password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed",
                        "schema": {
                            "$ref": "#/definitions/model.ProfileResp"
                        }
                    },
                    "400": {
                        "description": "Invalid payload/password",
                        "schema": {
                            "$ref": "#/definitions/model.BadResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorize",
                        "schema": {
                            "$ref": "#/definitions/model.UnAuthResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InErrResp"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Only retrive profile for own user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Get Current Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProfileResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorize",
                        "schema": {
                            "$ref": "#/definitions/model.UnAuthResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InErrResp"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Update profile for current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Update Profile",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated",
                        "schema": {
                            "$ref": "#/definitions/model.EmptyResp"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/model.BadResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorize",
                        "schema": {
                            "$ref": "#/definitions/model.UnAuthResp"
                        }
                    },
                    "403": {
                        "description": "Already in use",
                        "schema": {
                            "$ref": "#/definitions/model.ForbResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InErrResp"
                        }
                    }
                }
            }
        },
        "/user/profile/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Get user profile by id only for admin user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Get User Profile by UserID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UserID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProfileResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorize, Need admin privileges",
                        "schema": {
                            "$ref": "#/definitions/model.UnAuthResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InErrResp"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Update only for admin user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Update User Profile by UserID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UserID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated",
                        "schema": {
                            "$ref": "#/definitions/model.EmptyResp"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/model.BadResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorize",
                        "schema": {
                            "$ref": "#/definitions/model.UnAuthResp"
                        }
                    },
                    "403": {
                        "description": "Already in use or user not found",
                        "schema": {
                            "$ref": "#/definitions/model.ForbResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InErrResp"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "To add to admin, add param in url as ?isAdmin=true",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Register a User",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegisUser"
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "Is admin true or false",
                        "name": "isAdmin",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Profile"
                            }
                        }
                    },
                    "500": {
                        "description": "Many failure messages",
                        "schema": {
                            "$ref": "#/definitions/model.InErrResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BadResp": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request/Invalid json"
                },
                "value": {
                    "type": "string",
                    "example": "{}"
                }
            }
        },
        "model.EmptyResp": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.ForbResp": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Invalid credential"
                },
                "value": {
                    "type": "string",
                    "example": "{}"
                }
            }
        },
        "model.InErrResp": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Internal Server Error"
                },
                "value": {
                    "type": "string",
                    "example": "{}"
                }
            }
        },
        "model.LoginUser": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Password": {
            "type": "object",
            "properties": {
                "newPass": {
                    "type": "string"
                },
                "oldPass": {
                    "type": "string"
                }
            }
        },
        "model.Profile": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "integer",
                    "default": 0
                },
                "lastName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "default": 3
                },
                "userid": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.ProfileResp": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "value": {
                    "type": "object",
                    "$ref": "#/definitions/model.Profile"
                }
            }
        },
        "model.ProfileTokResp": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "value": {
                    "type": "object",
                    "$ref": "#/definitions/model.ProfileToken"
                }
            }
        },
        "model.ProfileToken": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "integer",
                    "default": 0
                },
                "lastName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "default": 3
                },
                "token": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.RegisUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "surya@omitsindo.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "First name"
                },
                "lastName": {
                    "type": "string",
                    "example": "Last name"
                },
                "password": {
                    "type": "string",
                    "example": "more than 6 char"
                },
                "username": {
                    "type": "string",
                    "example": "Username"
                }
            }
        },
        "model.UnAuthResp": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "value": {
                    "type": "string",
                    "example": "{}"
                }
            }
        },
        "model.UpdateProfile": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "surya@omitsindo.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "leave empty if don't want to update"
                },
                "lastName": {
                    "type": "string",
                    "example": "leave empty if don't want to update"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "All user API operation",
            "name": "User API"
        },
        {
            "description": "Authentication user API",
            "name": "Auth API"
        }
    ],
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}